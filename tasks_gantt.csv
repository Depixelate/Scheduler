,NAME,START,END
0,Eng-I: Value Education,2023-09-07,2023-09-08
1,OOP-I: Principles of OOP: Classes,2023-09-07,2023-09-09
2,DSA-I: Algorithm Analysis: Running time calculations,2023-09-07,2023-09-10
3,DD Lab: 1. Verification of Boolean Theorems using basic gates.,2023-09-07,2023-09-18
4,DD-I: Number Systems,2023-09-07,2023-09-09
5,DSA Lab: 1. Represent polynomial expression as linked list and write functions for polynomial manipulation,2023-09-07,2023-09-16
6,Math-I: Propositional Logic,2023-09-07,2023-09-10
7,OOP Lab: 1. Build an application using classes and objects (Eg: Electricity bill generation),2023-09-07,2023-09-19
8,Eng-I: Need,2023-09-08,2023-09-10
9,OOP-I: Objects,2023-09-09,2023-09-11
10,DD-I: Arithmetic Operations,2023-09-09,2023-09-12
11,Eng-I: Basic Guidelines,2023-09-10,2023-09-12
12,DSA-I: Abstract Data Types (ADTs),2023-09-10,2023-09-13
13,Math-I: Propositional equivalences,2023-09-10,2023-09-13
14,OOP-I: Data hiding,2023-09-11,2023-09-13
15,DD-I: Binary Codes,2023-09-12,2023-09-15
16,Eng-I: Content and Process,2023-09-12,2023-09-14
17,DSA-I: List ADT: Array implementation of lists,2023-09-13,2023-09-16
18,Math-I: Predicates and quantifiers,2023-09-13,2023-09-16
19,OOP-I: Data encapsulation,2023-09-13,2023-09-15
20,Eng-I: Self-Exploration,2023-09-14,2023-09-16
21,DD-I: Boolean Algebra and Logic Gates,2023-09-15,2023-09-18
22,OOP-I: Inheritance,2023-09-15,2023-09-17
23,Math-I: Nested quantifiers,2023-09-16,2023-09-19
24,DSA-I: Linked lists,2023-09-16,2023-09-19
25,"DSA Lab: 2. Implement doubly linked list ADT (e.g Insert, delete, search, merge, reverse operations)",2023-09-16,2023-09-26
26,Eng-I: meaning,2023-09-16,2023-09-18
27,OOP-I: Poly- morphism,2023-09-17,2023-09-19
28,Eng-I: importance and process,2023-09-18,2023-09-20
29,DD-I: Theorems and Properties of Boolean Algebra,2023-09-18,2023-09-20
30,"DD Lab: 2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters.",2023-09-18,2023-09-30
31,DSA-I: Circular linked lists,2023-09-19,2023-09-22
32,Math-I: Rules of inference,2023-09-19,2023-09-22
33,OOP-I: Definition of Classes: Objects,2023-09-19,2023-09-22
34,OOP Lab: 2. Develop an application using Inheritance (Eg: Payroll application),2023-09-19,2023-10-02
35,Eng-I: Continuous Happiness and Prosperity,2023-09-20,2023-09-21
36,DD-I: Boolean Functions,2023-09-20,2023-09-23
37,Eng-I: A look at basic Human Aspirations,2023-09-21,2023-09-23
38,OOP-I: Methods,2023-09-22,2023-09-24
39,DSA-I: Doubly linked lists,2023-09-22,2023-09-25
40,Math-I: Introduction to proofs,2023-09-22,2023-09-25
41,Eng-I: Right understanding,2023-09-23,2023-09-25
42,DD-I: Canonical and Standard Forms,2023-09-23,2023-09-26
43,OOP-I: Access specifiers,2023-09-24,2023-09-26
44,DSA-I: Applications of Lists: Polynomial manipulation. ,2023-09-25,2023-09-28
45,Math-I: Proof methods and strategy,2023-09-25,2023-09-28
46,Eng-I: Relationship and Physical Facilities,2023-09-25,2023-09-27
47,"DSA Lab: 3. Implementation of Stack ADT (e.g Balancing parenthesis, infix to postfix conversion, evaluation of
postfix expression)",2023-09-26,2023-10-06
48,OOP-I: Static and final classes and members,2023-09-26,2023-09-28
49,DD-I: Simplification of Boolean Functions using Karnaugh Map,2023-09-26,2023-09-29
50,Eng-I: The basic requirements,2023-09-27,2023-09-29
51,Math-I: Normal forms,2023-09-28,2023-10-01
52,DSA-II: Stack ADT: Stack model,2023-09-28,2023-10-01
53,OOP-I: Object Construction and Destruction,2023-09-28,2023-09-30
54,DD-I: Logic Gates,2023-09-29,2023-10-01
55,Eng-I: Understanding Happiness and Prosperity,2023-09-29,2023-10-01
56,DD Lab: 3. Design and implement half/full adder and subtractor.,2023-09-30,2023-10-11
57,OOP-I: Fundamental programming structures in Java,2023-09-30,2023-10-02
58,DD-I: NAND and NOR Implementations. ,2023-10-01,2023-10-04
59,DSA-II: Implementation of stacks,2023-10-01,2023-10-04
60,Math-I: Applications to switching circuits. ,2023-10-01,2023-10-04
61,Eng-I: A critical appraisal of the current scenario,2023-10-01,2023-10-03
62,OOP Lab: 3. Write a program to experiment with Polymorphism (E.g. Area of different shapes),2023-10-02,2023-10-15
63,OOP-I: Streams: Input,2023-10-02,2023-10-04
64,Eng-I: Method to fulfil the above human aspirations,2023-10-03,2023-10-05
65,OOP-I: Output,2023-10-04,2023-10-07
66,Math-II: Mathematical induction,2023-10-04,2023-10-07
67,DSA-II: Applications: Balancing symbols,2023-10-04,2023-10-07
68,DD-II: Combinational Circuits,2023-10-04,2023-10-07
69,Eng-I: UNDERSTANDING and living in harmony at various levels. ,2023-10-05,2023-10-06
70,Eng-II: An understanding human being as a co-existence of the sentient ‘I’ and the material ‘Body’,2023-10-06,2023-10-08
71,DSA Lab: 4. Implementation of Queue ADT (e.g Simulating printer jobs),2023-10-06,2023-10-15
72,Math-II: Strong induction,2023-10-07,2023-10-10
73,DSA-II: Infix to postfix conversion,2023-10-07,2023-10-10
74,OOP-I: String handling,2023-10-07,2023-10-09
75,DD-II: Analysis and Design Procedures,2023-10-07,2023-10-10
76,Eng-II: Understanding the needs of Self (‘I’) and ‘Body’,2023-10-08,2023-10-10
77,OOP-I: Examples in Java. ,2023-10-09,2023-10-11
78,DD-II: Binary Adder,2023-10-10,2023-10-12
79,Eng-II: Sukh and Suvidha,2023-10-10,2023-10-12
80,Math-II: The pigeonhole principle,2023-10-10,2023-10-13
81,DSA-II: Evaluating postfix expressions,2023-10-10,2023-10-13
82,"DD Lab: 4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers",2023-10-11,2023-10-23
83,OOP-II: Inheritance: Definition,2023-10-11,2023-10-13
84,Eng-II: Understanding the Body as an instrument of ‘I’ (I being the doer,2023-10-12,2023-10-14
85,DD-II: Subtractor,2023-10-12,2023-10-15
86,Math-II: Recurrence relations,2023-10-13,2023-10-16
87,DSA-II: Function calls,2023-10-13,2023-10-16
88,OOP-II: Types of inheritance: Single,2023-10-13,2023-10-15
89,Eng-II: seer and enjoyer),2023-10-14,2023-10-16
90,DD-II: Decimal Adder,2023-10-15,2023-10-18
91,"OOP Lab: 4. Design a Java interface for ADTs. (E.g. Stack, Queue)",2023-10-15,2023-10-28
92,"DSA Lab: 5. Implement binary search tree and produce its pre-order, in-order, and post-order traversals",2023-10-15,2023-10-25
93,OOP-II: Multilevel,2023-10-15,2023-10-17
94,Eng-II: Understanding the characteristics and activities of ‘I’ and harmony in ‘I’,2023-10-16,2023-10-18
95,Math-II: Partition of integers,2023-10-16,2023-10-19
96,DSA-II: Queue ADT: Queue model,2023-10-16,2023-10-19
97,OOP-II: Multiple,2023-10-17,2023-10-19
98,Eng-II: Understanding the harmony of I with the Body: Sanyam and Swasthya,2023-10-18,2023-10-20
99,DD-II: Binary Multiplier,2023-10-18,2023-10-21
100,Math-II: Solving linear recurrence relations using generating functions,2023-10-19,2023-10-22
101,OOP-II: Hierarchical,2023-10-19,2023-10-22
102,DSA-II: Array implementation of queues,2023-10-19,2023-10-22
103,Eng-II: correct appraisal of Physical needs,2023-10-20,2023-10-21
104,DD-II: Magnitude Comparator,2023-10-21,2023-10-23
105,Eng-II: the meaning of Prosperity in detail,2023-10-21,2023-10-23
106,Math-II: Inclusion and Exclusion Principle and its applications. ,2023-10-22,2023-10-25
107,OOP-II: Subclass constructors,2023-10-22,2023-10-24
108,DSA-II: Applications of queues. ,2023-10-22,2023-10-25
109,Eng-II: Pro- grams to ensure Sanyam and Swasthya. ,2023-10-23,2023-10-25
110,DD Lab: 5. Design and implement shift-registers.,2023-10-23,2023-11-04
111,DD-II: Decoders,2023-10-23,2023-10-26
112,OOP-II: Interfaces in Java: Definition,2023-10-24,2023-10-26
113,Math-III: Graphs,2023-10-25,2023-10-28
114,DSA Lab: 6. Implement AVL trees (e.g Implement dictionary),2023-10-25,2023-11-04
115,DSA-III: Preliminaries,2023-10-25,2023-10-28
116,Eng-III: Understanding harmony in the family,2023-10-25,2023-10-27
117,OOP-II: Implementation,2023-10-26,2023-10-28
118,DD-II: Encoders,2023-10-26,2023-10-29
119,Eng-III: The basic unit of human interaction,2023-10-27,2023-10-29
120,DSA-III: Binary trees: Expression trees,2023-10-28,2023-10-31
121,OOP-II: Extending interfaces,2023-10-28,2023-10-30
122,Math-III: Graph terminology and special types of graphs,2023-10-28,2023-10-31
123,OOP Lab: 5. Programs using Exception handling. (E.g. Bank Account manipulation),2023-10-28,2023-11-10
124,DD-II: Multiplexers,2023-10-29,2023-11-01
125,Eng-III: understanding values in a human-to-human relationship,2023-10-29,2023-10-31
126,OOP-II: Inheritance versus delegation,2023-10-30,2023-11-01
127,Math-III: Subgraphs,2023-10-31,2023-11-04
128,DSA-III: Binary search tree ADT,2023-10-31,2023-11-04
129,Eng-III: Understanding Trust,2023-10-31,2023-11-02
130,OOP-II: Inheritance rules,2023-11-01,2023-11-04
131,DD-II: Introduction to HDL,2023-11-01,2023-11-04
132,Eng-III: The foundational value in relationship,2023-11-02,2023-11-04
133,DSA-III: AVL trees,2023-11-04,2023-11-07
134,DD-II: HDL Models of Combinational circuits. ,2023-11-04,2023-11-06
135,OOP-II: Inner classes,2023-11-04,2023-11-06
136,Eng-III: Difference between intention and competence,2023-11-04,2023-11-05
137,DD Lab: 6. Design and implement synchronous counters.,2023-11-04,2023-11-15
138,DSA Lab: 7. Implement priority queue using binary heaps (e.g Storing employee records based upon salary),2023-11-04,2023-11-13
139,Math-III: Matrix representation of graphs and graph isomorphism,2023-11-04,2023-11-07
140,Eng-III: Understanding Respect,2023-11-05,2023-11-07
141,OOP-II: Examples in Java. ,2023-11-06,2023-11-08
142,DD-III: Sequential Circuits,2023-11-06,2023-11-09
143,DSA-III: Tree traversals,2023-11-07,2023-11-10
144,Math-III: Connectivity,2023-11-07,2023-11-10
145,Eng-III: as the right evaluation,2023-11-07,2023-11-09
146,OOP-III: Polymorphism: Method overloading and overriding,2023-11-08,2023-11-10
147,DD-III: Storage Elements: Latches,2023-11-09,2023-11-12
148,Eng-III: Difference between respect and differentiation,2023-11-09,2023-11-11
149,OOP-III: Dynamic method dispatch,2023-11-10,2023-11-12
150,Math-III: Eulerian and Hamilton graphs. ,2023-11-10,2023-11-13
151,OOP Lab: 6. Program to implement packages (Eg: Currency converter),2023-11-10,2023-11-23
152,DSA-III: B- Trees,2023-11-10,2023-11-13
153,Eng-III: the other salient values in a relationship,2023-11-11,2023-11-13
154,DD-III: Flip,2023-11-12,2023-11-15
155,OOP-III: Exceptions: Hierarchy,2023-11-12,2023-11-14
156,Math-IV: Algebraic systems,2023-11-13,2023-11-16
157,DSA-III: Priority Queues: Binary heap. ,2023-11-13,2023-11-16
158,Eng-III: Understanding the harmony in the society,2023-11-13,2023-11-15
159,DSA Lab: 8. Graph representation and implement graph traversal algorithms,2023-11-13,2023-11-23
160,OOP-III: Built-in exceptions,2023-11-14,2023-11-16
161,Eng-III: comprehensive Human Goals,2023-11-15,2023-11-17
162,DD-III: Flops,2023-11-15,2023-11-17
163,DD Lab: 7. Design and implement asynchronous counters.,2023-11-15,2023-11-27
164,Math-IV: Semi groups and monoids,2023-11-16,2023-11-19
165,DSA-IV: Graph Algorithms: Definitions,2023-11-16,2023-11-19
166,OOP-III: Creating own exception,2023-11-16,2023-11-19
167,Eng-III: Visualizing a universal harmonious order in society,2023-11-17,2023-11-18
168,DD-III: Analysis of Clocked Sequential Circuits,2023-11-17,2023-11-20
169,Eng-III: Undivided Society,2023-11-18,2023-11-20
170,Math-IV: Groups,2023-11-19,2023-11-22
171,OOP-III: Packages in Java,2023-11-19,2023-11-21
172,DSA-IV: Representation of graphs,2023-11-19,2023-11-22
173,Eng-III: Universal Order,2023-11-20,2023-11-22
174,DD-III: State Reduction and Assignment,2023-11-20,2023-11-23
175,OOP-III: Examples in Java. ,2023-11-21,2023-11-23
176,DSA-IV: Graph Traversals: Breadth-first traversal,2023-11-22,2023-11-25
177,Eng-III: From family to world family! ,2023-11-22,2023-11-24
178,Math-IV: Subgroups Homomorphisms,2023-11-22,2023-11-25
179,"OOP Lab: 7. Program to implement generic classes, methods (Eg: Generic stack, Sorting)",2023-11-23,2023-12-06
180,OOP-IV: Definition and concepts: Generic classes and generic methods,2023-11-23,2023-11-25
181,DSA Lab: 9. Implement Dijkstra’s algorithm using graph (e.g Find the shortest route to connect one city to another),2023-11-23,2023-12-03
182,DD-III: Design Procedure,2023-11-23,2023-11-26
183,Eng-IV: Understanding the harmony in Nature,2023-11-24,2023-11-26
184,DSA-IV: Depth-first traversal,2023-11-25,2023-11-28
185,OOP-IV: Generic types,2023-11-25,2023-11-27
186,Math-IV: Normal subgroup and coset,2023-11-25,2023-11-28
187,DD-III: Registers and Counters,2023-11-26,2023-11-28
188,Eng-IV: Interconnectedness,2023-11-26,2023-11-28
189,OOP-IV: Restrictions and limitations,2023-11-27,2023-11-29
190,DD Lab: 8. Coding combinational circuits using HDL.,2023-11-27,2023-12-08
191,DD-III: HDL Models of Sequential Circuits. ,2023-11-28,2023-12-01
192,Math-IV: Lagrange’s theorem,2023-11-28,2023-12-01
193,DSA-IV: Topological sort,2023-11-28,2023-12-01
194,Eng-IV: self-regulation and mutual fulfilment among the four orders of nature,2023-11-28,2023-11-30
195,OOP-IV: Inheritance rules for generic types,2023-11-29,2023-12-01
196,Eng-IV: recyclability,2023-11-30,2023-12-02
197,Math-IV: Definitions and examples of Rings and Fields. ,2023-12-01,2023-12-04
198,DD-IV: Analysis and Design of Asynchronous Sequential Circuits,2023-12-01,2023-12-04
199,OOP-IV: Reflections,2023-12-01,2023-12-04
200,DSA-IV: Shortest-Path Algorithms: Dijkstra’s algorithm,2023-12-01,2023-12-04
201,Eng-IV: Understanding Existence as Coexistence of mutually interacting units in all-pervasive space,2023-12-02,2023-12-03
202,DSA Lab: 10. Implement any two sorting algorithms,2023-12-03,2023-12-12
203,Eng-IV: Holistic perception of harmony at all levels of existence. ,2023-12-03,2023-12-05
204,OOP-IV: Examples in Java. ,2023-12-04,2023-12-06
205,DD-IV: Reduction of State and Flow Tables,2023-12-04,2023-12-07
206,Math-V: Partial ordering,2023-12-04,2023-12-07
207,DSA-IV: All-pairs shortest path. ,2023-12-04,2023-12-07
208,Eng-V: Natural acceptance of human values,2023-12-05,2023-12-07
209,"OOP Lab: 8. Program to perform operations using Collection classes (Eg: ArrayList, LinkedList)",2023-12-06,2023-12-19
210,OOP-V: ALGORITHMS 9 Introduction to collections,2023-12-06,2023-12-08
211,DSA-V: Sorting: Insertion sort,2023-12-07,2023-12-10
212,DD-IV: Race-free State Assignment,2023-12-07,2023-12-09
213,Math-V: Posets,2023-12-07,2023-12-10
214,Eng-V: Definitiveness of Ethical Human Conduct,2023-12-07,2023-12-09
215,DD Lab: 9. Coding sequential circuits using HDL.,2023-12-08,2023-12-20
216,OOP-V: Collection Classes and Interfaces: Array list,2023-12-08,2023-12-10
217,Eng-V: Basis for Humanistic Education,2023-12-09,2023-12-11
218,DD-IV: Hazards. ,2023-12-09,2023-12-12
219,DSA-V: Shell sort,2023-12-10,2023-12-13
220,Math-V: Lattices as Posets,2023-12-10,2023-12-13
221,OOP-V: Linked list,2023-12-10,2023-12-12
222,Eng-V: Humanistic Constitution and Humanistic Universal Order,2023-12-11,2023-12-13
223,OOP-V: Queue,2023-12-12,2023-12-14
224,DSA Lab: 11. Implement hashing using separate chaining technique,2023-12-12,2023-12-22
225,DD-V: RAM,2023-12-12,2023-12-15
226,DSA-V: Radix Exchange sort,2023-12-13,2023-12-16
227,Math-V: Properties of lattices,2023-12-13,2023-12-16
228,Eng-V: Competence in Professional Ethics,2023-12-13,2023-12-15
229,OOP-V: Set,2023-12-14,2023-12-16
230,DD-V: Memory Decoding,2023-12-15,2023-12-18
231,Eng-V: augmenting universal human order,2023-12-15,2023-12-17
232,Math-V: Lattices as algebraic systems,2023-12-16,2023-12-19
233,OOP-V: Trees,2023-12-16,2023-12-19
234,DSA-V: Hashing: Hash function,2023-12-16,2023-12-19
235,Eng-V: the scope and characteristics of people-friendly and eco-friendly,2023-12-17,2023-12-18
236,Eng-V: Holistic Technologies,2023-12-18,2023-12-20
237,DD-V: Error Detection and Correction,2023-12-18,2023-12-20
238,Math-V: Sublattices,2023-12-19,2023-12-22
239,OOP Lab: 9. Develop a mini project for any application using the constructs of Java.,2023-12-19,2024-01-01
240,DSA-V: Separate chaining,2023-12-19,2023-12-22
241,OOP-V: Iterators for collections,2023-12-19,2023-12-21
242,Eng-V: production systems and management models,2023-12-20,2023-12-22
243,DD Lab: 10. Design and implementation of a simple digital system (Mini Project).,2023-12-20,2024-01-01
244,DD-V: ROM,2023-12-20,2023-12-23
245,OOP-V: Map class,2023-12-21,2023-12-23
246,DSA-V: Open addressing,2023-12-22,2023-12-25
247,DSA Lab: 12. Mini Project,2023-12-22,2024-01-01
248,Eng-V: Case studies,2023-12-22,2023-12-24
249,Math-V: Direct product and Homomorphism,2023-12-22,2023-12-25
250,DD-V: Programmable Logic Array,2023-12-23,2023-12-26
251,OOP-V: Collection algorithms: Sorting,2023-12-23,2023-12-25
252,Eng-V: Strategy for the transition from the present state to Universal Human Order,2023-12-24,2023-12-26
253,Math-V: Boolean algebra,2023-12-25,2023-12-28
254,OOP-V: Searching,2023-12-25,2023-12-27
255,DSA-V: Rehashing,2023-12-25,2023-12-28
256,DD-V: Programmable Array Logic,2023-12-26,2023-12-29
257,Eng-V: At the level of individual: as socially and ecologically responsible engineers,2023-12-26,2023-12-28
258,OOP-V: User-defined algorithms,2023-12-27,2023-12-29
259,Eng-V: technologists and managers,2023-12-28,2023-12-30
260,DSA-V: Extendible hashing. ,2023-12-28,2024-01-01
261,Math-V: Stone’s representation Theorem. ,2023-12-28,2024-01-01
262,OOP-V: Examples in Java. ,2023-12-29,2024-01-01
263,DD-V: Sequential Programmable Devices. ,2023-12-29,2024-01-01
264,Eng-V: At the level of society: as mutually enriching institutions and organizations. ,2023-12-30,2024-01-01
