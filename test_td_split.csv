,NAME,START
0,1. Verification of Boolean Theorems using basic gates. (1/11),2023-09-04
1,1. Verification of Boolean Theorems using basic gates. (2/11),2023-09-05
2,1. Verification of Boolean Theorems using basic gates. (3/11),2023-09-06
3,1. Verification of Boolean Theorems using basic gates. (4/11),2023-09-07
4,1. Verification of Boolean Theorems using basic gates. (5/11),2023-09-08
5,1. Verification of Boolean Theorems using basic gates. (6/11),2023-09-09
6,1. Verification of Boolean Theorems using basic gates. (7/11),2023-09-10
7,1. Verification of Boolean Theorems using basic gates. (8/11),2023-09-11
8,1. Verification of Boolean Theorems using basic gates. (9/11),2023-09-12
9,1. Verification of Boolean Theorems using basic gates. (10/11),2023-09-13
10,1. Verification of Boolean Theorems using basic gates. (11/11),2023-09-14
11,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (1/12)",2023-09-15
12,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (2/12)",2023-09-16
13,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (3/12)",2023-09-17
14,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (4/12)",2023-09-18
15,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (5/12)",2023-09-19
16,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (6/12)",2023-09-20
17,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (7/12)",2023-09-21
18,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (8/12)",2023-09-22
19,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (9/12)",2023-09-23
20,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (10/12)",2023-09-24
21,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (11/12)",2023-09-25
22,"2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters. (12/12)",2023-09-26
23,3. Design and implement half/full adder and subtractor. (1/12),2023-09-27
24,3. Design and implement half/full adder and subtractor. (2/12),2023-09-28
25,3. Design and implement half/full adder and subtractor. (3/12),2023-09-29
26,3. Design and implement half/full adder and subtractor. (4/12),2023-09-30
27,3. Design and implement half/full adder and subtractor. (5/12),2023-10-01
28,3. Design and implement half/full adder and subtractor. (6/12),2023-10-02
29,3. Design and implement half/full adder and subtractor. (7/12),2023-10-03
30,3. Design and implement half/full adder and subtractor. (8/12),2023-10-04
31,3. Design and implement half/full adder and subtractor. (9/12),2023-10-05
32,3. Design and implement half/full adder and subtractor. (10/12),2023-10-06
33,3. Design and implement half/full adder and subtractor. (11/12),2023-10-07
34,3. Design and implement half/full adder and subtractor. (12/12),2023-10-08
35,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (1/12)",2023-10-09
36,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (2/12)",2023-10-10
37,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (3/12)",2023-10-11
38,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (4/12)",2023-10-12
39,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (5/12)",2023-10-13
40,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (6/12)",2023-10-14
41,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (7/12)",2023-10-15
42,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (8/12)",2023-10-16
43,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (9/12)",2023-10-17
44,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (10/12)",2023-10-18
45,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (11/12)",2023-10-19
46,"4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers (12/12)",2023-10-20
47,5. Design and implement shift-registers. (1/12),2023-10-21
48,5. Design and implement shift-registers. (2/12),2023-10-22
49,5. Design and implement shift-registers. (3/12),2023-10-23
50,5. Design and implement shift-registers. (4/12),2023-10-24
51,5. Design and implement shift-registers. (5/12),2023-10-25
52,5. Design and implement shift-registers. (6/12),2023-10-26
53,5. Design and implement shift-registers. (7/12),2023-10-27
54,5. Design and implement shift-registers. (8/12),2023-10-28
55,5. Design and implement shift-registers. (9/12),2023-10-29
56,5. Design and implement shift-registers. (10/12),2023-10-30
57,5. Design and implement shift-registers. (11/12),2023-10-31
58,5. Design and implement shift-registers. (12/12),2023-11-01
59,6. Design and implement synchronous counters. (1/12),2023-11-02
60,6. Design and implement synchronous counters. (2/12),2023-11-03
61,6. Design and implement synchronous counters. (3/12),2023-11-04
62,6. Design and implement synchronous counters. (4/12),2023-11-05
63,6. Design and implement synchronous counters. (5/12),2023-11-06
64,6. Design and implement synchronous counters. (6/12),2023-11-07
65,6. Design and implement synchronous counters. (7/12),2023-11-08
66,6. Design and implement synchronous counters. (8/12),2023-11-09
67,6. Design and implement synchronous counters. (9/12),2023-11-10
68,6. Design and implement synchronous counters. (10/12),2023-11-11
69,6. Design and implement synchronous counters. (11/12),2023-11-12
70,6. Design and implement synchronous counters. (12/12),2023-11-13
71,7. Design and implement asynchronous counters. (1/12),2023-11-14
72,7. Design and implement asynchronous counters. (2/12),2023-11-15
73,7. Design and implement asynchronous counters. (3/12),2023-11-16
74,7. Design and implement asynchronous counters. (4/12),2023-11-17
75,7. Design and implement asynchronous counters. (5/12),2023-11-18
76,7. Design and implement asynchronous counters. (6/12),2023-11-19
77,7. Design and implement asynchronous counters. (7/12),2023-11-20
78,7. Design and implement asynchronous counters. (8/12),2023-11-21
79,7. Design and implement asynchronous counters. (9/12),2023-11-22
80,7. Design and implement asynchronous counters. (10/12),2023-11-23
81,7. Design and implement asynchronous counters. (11/12),2023-11-24
82,7. Design and implement asynchronous counters. (12/12),2023-11-25
83,8. Coding combinational circuits using HDL. (1/12),2023-11-26
84,8. Coding combinational circuits using HDL. (2/12),2023-11-27
85,8. Coding combinational circuits using HDL. (3/12),2023-11-28
86,8. Coding combinational circuits using HDL. (4/12),2023-11-29
87,8. Coding combinational circuits using HDL. (5/12),2023-11-30
88,8. Coding combinational circuits using HDL. (6/12),2023-12-01
89,8. Coding combinational circuits using HDL. (7/12),2023-12-02
90,8. Coding combinational circuits using HDL. (8/12),2023-12-03
91,8. Coding combinational circuits using HDL. (9/12),2023-12-04
92,8. Coding combinational circuits using HDL. (10/12),2023-12-05
93,8. Coding combinational circuits using HDL. (11/12),2023-12-06
94,8. Coding combinational circuits using HDL. (12/12),2023-12-07
95,9. Coding sequential circuits using HDL. (1/12),2023-12-08
96,9. Coding sequential circuits using HDL. (2/12),2023-12-09
97,9. Coding sequential circuits using HDL. (3/12),2023-12-10
98,9. Coding sequential circuits using HDL. (4/12),2023-12-11
99,9. Coding sequential circuits using HDL. (5/12),2023-12-12
100,9. Coding sequential circuits using HDL. (6/12),2023-12-13
101,9. Coding sequential circuits using HDL. (7/12),2023-12-14
102,9. Coding sequential circuits using HDL. (8/12),2023-12-15
103,9. Coding sequential circuits using HDL. (9/12),2023-12-16
104,9. Coding sequential circuits using HDL. (10/12),2023-12-17
105,9. Coding sequential circuits using HDL. (11/12),2023-12-18
106,9. Coding sequential circuits using HDL. (12/12),2023-12-19
107,10. Design and implementation of a simple digital system (Mini Project). (1/12),2023-12-20
108,10. Design and implementation of a simple digital system (Mini Project). (2/12),2023-12-21
109,10. Design and implementation of a simple digital system (Mini Project). (3/12),2023-12-22
110,10. Design and implementation of a simple digital system (Mini Project). (4/12),2023-12-23
111,10. Design and implementation of a simple digital system (Mini Project). (5/12),2023-12-24
112,10. Design and implementation of a simple digital system (Mini Project). (6/12),2023-12-25
113,10. Design and implementation of a simple digital system (Mini Project). (7/12),2023-12-26
114,10. Design and implementation of a simple digital system (Mini Project). (8/12),2023-12-27
115,10. Design and implementation of a simple digital system (Mini Project). (9/12),2023-12-28
116,10. Design and implementation of a simple digital system (Mini Project). (10/12),2023-12-29
117,10. Design and implementation of a simple digital system (Mini Project). (11/12),2023-12-30
118,10. Design and implementation of a simple digital system (Mini Project). (12/12),2023-12-31
