title: Eng
UNIT I INTRODUCTION TO VALUE EDUCATION 9
Value Education – Need, Basic Guidelines, Content and Process, Self-Exploration – meaning, importance
and process, Continuous Happiness and Prosperity – A look at basic Human Aspirations, Right
understanding, Relationship and Physical Facilities – The basic requirements, Understanding Happiness
and Prosperity – A critical appraisal of the current scenario, Method to fulfil the above human aspirations
– UNDERSTANDING and living in harmony at various levels.
UNIT II HARMONY IN THE HUMAN BEING 9
An understanding human being as a co-existence of the sentient ‘I’ and the material ‘Body’,
Understanding the needs of Self (‘I’) and ‘Body’ – Sukh and Suvidha, Understanding the Body as an
instrument of ‘I’ (I being the doer, seer and enjoyer), Understanding the characteristics and activities of
‘I’ and harmony in ‘I’, Understanding the harmony of I with the Body: Sanyam and Swasthya; correct
appraisal of Physical needs, the meaning of Prosperity in detail, Pro- grams to ensure Sanyam and
Swasthya.
UNIT III HARMONY IN THE FAMILY AND SOCIETY 9
Understanding harmony in the family – The basic unit of human interaction, understanding values in a
human-to-human relationship; Understanding Trust – The foundational value in relationship, Difference
between intention and competence, Understanding Respect – as the right evaluation, Difference between
respect and differentiation; the other salient values in a relationship, Understanding the harmony in the
society – comprehensive Human Goals, Visualizing a universal harmonious order in society– Undivided
Society, Universal Order – From family to world family!
UNIT IV HARMONY IN NATURE AND EXISTENCE 9
Understanding the harmony in Nature, Interconnectedness, self-regulation and mutual fulfilment among
the four orders of nature – recyclability, Understanding Existence as Coexistence of mutually interacting
units in all-pervasive space, Holistic perception of harmony at all levels of existence.
UNIT V IMPLICATIONS OF THE ABOVE HOLISTIC UNDERSTANDING OF HARMONY ON PROFESSIONAL ETHICS 9
Natural acceptance of human values, Definitiveness of Ethical Human Conduct, Basis for Humanistic
Education, Humanistic Constitution and Humanistic Universal Order, Competence in Professional Ethics
– augmenting universal human order, the scope and characteristics of people-friendly and eco-friendly,
Holistic Technologies, production systems and management models – Case studies, Strategy for the
transition from the present state to Universal Human Order – At the level of individual: as socially and
ecologically responsible engineers, technologists and managers, At the level of society: as mutually
enriching institutions and organizations.
TOTAL PERIODS: 45

title: Math
UNIT I LOGIC AND PROOFS 13
Propositional Logic – Propositional equivalences – Predicates and quantifiers – Nested quantifiers – Rules
of inference – Introduction to proofs – Proof methods and strategy – Normal forms – Applications to
switching circuits.
UNIT II COMBINATORICS 11
Mathematical induction – Strong induction – The pigeonhole principle – Recurrence relations – Partition
of integers – Solving linear recurrence relations using generating functions – Inclusion and Exclusion
Principle and its applications.
UNIT III GRAPHS 10
Graphs – Graph terminology and special types of graphs – Subgraphs – Matrix representation of graphs
and graph isomorphism – Connectivity – Eulerian and Hamilton graphs.
UNIT IV ALGEBRAIC STRUCTURES 13
Algebraic systems – Semi groups and monoids – Groups – Subgroups Homomorphisms – Normal
subgroup and coset – Lagrange’s theorem – Definitions and examples of Rings and Fields.
UNIT V LATTICES AND BOOLEAN ALGEBRA 13
Partial ordering – Posets – Lattices as Posets – Properties of lattices – Lattices as algebraic systems –
Sublattices – Direct product and Homomorphism; Boolean algebra – Stone’s representation Theorem.
TOTAL PERIODS: 60

title: DD
UNIT I BOOLEAN ALGEBRA AND LOGIC GATES 9
Number Systems – Arithmetic Operations – Binary Codes– Boolean Algebra and Logic Gates – Theorems
and Properties of Boolean Algebra – Boolean Functions – Canonical and Standard Forms – Simplification
of Boolean Functions using Karnaugh Map – Logic Gates – NAND and NOR Implementations.
UNIT II COMBINATIONAL LOGIC 9
Combinational Circuits – Analysis and Design Procedures – Binary Adder–Subtractor – Decimal Adder
– Binary Multiplier – Magnitude Comparator – Decoders – Encoders – Multiplexers
– Introduction to HDL – HDL Models of Combinational circuits.
UNIT III SYNCHRONOUS SEQUENTIAL LOGIC 9
Sequential Circuits – Storage Elements: Latches, Flip–Flops; Analysis of Clocked Sequential Circuits –
State Reduction and Assignment – Design Procedure – Registers and Counters – HDL Models of
Sequential Circuits.
UNIT IV ASYNCHRONOUS SEQUENTIAL LOGIC 9
Analysis and Design of Asynchronous Sequential Circuits – Reduction of State and Flow Tables
– Race-free State Assignment – Hazards.
UNIT V MEMORY AND PROGRAMMABLE LOGIC 9
RAM – Memory Decoding – Error Detection and Correction – ROM – Programmable Logic Array
– Programmable Array Logic – Sequential Programmable Devices.
TOTAL PERIODS: 45

title: DSA
UNIT I LINEAR DATA STRCTURES - LIST 9
Algorithm Analysis: Running time calculations; Abstract Data Types (ADTs); List ADT: Array
implementation of lists – Linked lists – Circular linked lists – Doubly linked lists – Applications of Lists:
Polynomial manipulation.
UNIT II LINEAR DATA STRUCTURES – STACKS AND QUEUES 9
Stack ADT: Stack model – Implementation of stacks – Applications: Balancing symbols – Infix to postfix
conversion – Evaluating postfix expressions – Function calls; Queue ADT: Queue model – Array
implementation of queues – Applications of queues.
UNIT III NON-LINEAR DATA STRUCTURES - TREES 9
Preliminaries; Binary trees: Expression trees; Binary search tree ADT; AVL trees; Tree traversals; B-
Trees; Priority Queues: Binary heap.
UNIT IV NON LINEAR DATA STRUCTURES - GRAPHS 9
Graph Algorithms: Definitions – Representation of graphs; Graph Traversals: Breadth-first traversal –
Depth-first traversal; Topological sort – Shortest-Path Algorithms: Dijkstra’s algorithm – All-pairs
shortest path.
UNIT V SORTING AND HASING TECHNIQUES 9
Sorting: Insertion sort – Shell sort – Radix Exchange sort; Hashing: Hash function – Separate chaining –
Open addressing – Rehashing – Extendible hashing.
TOTAL PERIODS: 45

title: OOP
UNIT I INTRODUCTION 9
Principles of OOP: Classes – Objects – Data hiding – Data encapsulation – Inheritance – Poly- morphism;
Definition of Classes: Objects – Methods – Access specifiers – Static and final classes and members;
Object Construction and Destruction – Fundamental programming structures in Java; Streams: Input–
Output, String handling – Examples in Java.
UNIT II INHERITANCE 9
Inheritance: Definition – Types of inheritance: Single – Multilevel – Multiple – Hierarchical; Subclass
constructors – Interfaces in Java: Definition – Implementation – Extending interfaces
– Inheritance versus delegation – Inheritance rules – Inner classes – Examples in Java.
UNIT III POLYMORPHISM AND EXCEPTION HANDLING 9
Polymorphism: Method overloading and overriding – Dynamic method dispatch; Exceptions: Hierarchy
– Built-in exceptions – Creating own exception; Packages in Java – Examples in Java.
UNIT IV GENERIC TYPES AND METHODS 9
Definition and concepts: Generic classes and generic methods – Generic types – Restrictions and
limitations – Inheritance rules for generic types – Reflections – Examples in Java.
UNIT V GENERIC COLLECTIONS FOR ADTS AND
ALGORITHMS 9
Introduction to collections – Collection Classes and Interfaces: Array list – Linked list – Queue – Set –
Trees; Iterators for collections – Map class – Collection algorithms: Sorting – Searching – User-defined
algorithms – Examples in Java.
TOTAL PERIODS: 45

title: DD Lab
1. Verification of Boolean Theorems using basic gates.
2. Design and implementation of combinational circuits using basic gates for arbitrary functions, code
converters.
3. Design and implement half/full adder and subtractor.
4. Design and implement combinational circuits using MSI devices:
• 4-bit binary adder/subtractor
• Parity generator/checker
• Magnitude Comparator
• Application using multiplexers
5. Design and implement shift-registers.
6. Design and implement synchronous counters.
7. Design and implement asynchronous counters.
8. Coding combinational circuits using HDL.
9. Coding sequential circuits using HDL.
10. Design and implementation of a simple digital system (Mini Project).

title: DSA Lab
1. Represent polynomial expression as linked list and write functions for polynomial manipulation
2. Implement doubly linked list ADT (e.g Insert, delete, search, merge, reverse operations)
3. Implementation of Stack ADT (e.g Balancing parenthesis, infix to postfix conversion, evaluation of
postfix expression)
4. Implementation of Queue ADT (e.g Simulating printer jobs)
5. Implement binary search tree and produce its pre-order, in-order, and post-order traversals
6. Implement AVL trees (e.g Implement dictionary)
7. Implement priority queue using binary heaps (e.g Storing employee records based upon salary)
8. Graph representation and implement graph traversal algorithms
9. Implement Dijkstra’s algorithm using graph (e.g Find the shortest route to connect one city to another)
10. Implement any two sorting algorithms
11. Implement hashing using separate chaining technique
12. Mini Project

title: OOP Lab
1. Build an application using classes and objects (Eg: Electricity bill generation)
2. Develop an application using Inheritance (Eg: Payroll application)
3. Write a program to experiment with Polymorphism (E.g. Area of different shapes)
4. Design a Java interface for ADTs. (E.g. Stack, Queue)
5. Programs using Exception handling. (E.g. Bank Account manipulation)
6. Program to implement packages (Eg: Currency converter)
7. Program to implement generic classes, methods (Eg: Generic stack, Sorting)
8. Program to perform operations using Collection classes (Eg: ArrayList, LinkedList)
9. Develop a mini project for any application using the constructs of Java.